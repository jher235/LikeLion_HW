API 설계는 다음과 같다.

1. 유저 생성
    유저의 uid, name 정보를 받아 유저 생성
    유저 생성이므로 URI는 /user/register
    생성이므로 HTTP 메서드는 POST
2. 유저가 메모 작성
    메모의 mid, content, writerId를 통해 메모 생성 -> 이때 mid는 그냥 만들어진 순서대로 0,1,2,3.... 이렇게 되도록 설정하고
    작성할 때 보내주는 정보는 content, writerId만 주도록 한다. 이를 위해 임시로 MemoDTO를 작성해서 request body로 값을 받아온다.
    메모 생성이므로 URI는 /memo/regiser
    생성이므로 HTTP 메서드는 POST
3. 유저가 자신이 작성한 특정 메모 조회
    WriterId와 유저 Id가 동일하면 조회 가능하도록 함
    조회이므로 URI는 /memo/read?mid={mid}
    조회이므로 HTTP 메서드는 GET -> 유저의 uid를 함께 보내서 권한을 확인하고자 HTTP 메서드를 POST로 설정
    request body로 uid를 전송
4. 유저가 자신이 작성한 모든 메모 조회
    해당하는 유저 Id와 동일한 WriterId의 메모 전체 조회
    전체 조회이므로 URI는 /memo/list?writerId={writerId}
    조회이므로 HTTP 메서드는 GET -> 유저의 uid를 함께 보내서 권한을 확인하고자 HTTP 메서드를 POST로 설정
    request body로 uid를 전송
5. 유저가 자신이 작성한 특정 메모 삭제
    해당하는 유저 Id와 동일한 WriterId일 경우 삭제
    특정 메모 삭제이므로 URI는 /memo/delete?mid={mid}
    request body로 uid를 전송
    삭제이므로 HTTP 메서드는 DELETE
6. 유저가 자신이 작성한 특정 메모 수정
    해당하는 유저 Id와 동일한 WriterId일 request body에 content를 받아와서 수정 -> 임시로 작성한 MemoDTO를 사용하지만,
    이때 받아온 uid는 작성자가 일치하는지를 확인하는데에 사용된다.
    특정 메모 수정이므로 URI는 /memo/modify?mid={mid}
    request body로 uid를 전송
    수정 이므로 HTTP 메서드는 PATCH - content만 수정


